#include <iostream>
#include <vector>
using namespace std;

int knapsack(int W, vector<int>& wt, vector<int>& val, int n) {
    vector<vector<int>> dp(n + 1, vector<int>(W + 1, 0));

    for (int i = 1; i <= n; i++) {
        for (int w = 1; w <= W; w++) {
            if (wt[i - 1] <= w) {
                dp[i][w] = max(val[i - 1] + dp[i - 1][w - wt[i - 1]], dp[i - 1][w]);
            } else {
                dp[i][w] = dp[i - 1][w];
            }
        }
    }

    return dp[n][W];
}

int main() {
    int n; // Number of items
    cout << "Enter the number of items: ";
    cin >> n;

    vector<int> wt(n), val(n);

    cout << "Enter the weight and value of each item:" << endl;
    for (int i = 0; i < n; i++) {
        cin >> wt[i] >> val[i];
    }

    int W; // Knapsack capacity
    cout << "Enter the knapsack capacity: ";
    cin >> W;

    int result = knapsack(W, wt, val, n);
    cout << "Maximum value in the knapsack: " << result << endl;

    return 0;
}

_______________________
Enter the number of items: 3
Enter the weight and value of each item:
2 3
1 2
3 5
Enter the knapsack capacity: 4
______________________
Maximum value in the knapsack: 8

